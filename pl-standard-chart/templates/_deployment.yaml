{{- define "pl-standard-chart.deployment" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  namespace: {{ .Values.namespace }} 
spec:
  selector:
    matchLabels:
      app: {{ .Values.appName }}-template
  replicas: {{ default 1 .Values.replicas }}
  minReadySeconds: {{ default 10 .Values.minReadySeconds }}
  revisionHistoryLimit: {{ default 5 .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}-template
    spec:
      restartPolicy: {{ default "Always" .Values.restartPolicy }}
      {{ if .Values.registrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.registrySecretName }}
      {{ end }}
      volumes:
        {{- range $volume := .Values.persistentVolumeClaims }}
        - name: {{ $.Values.appName }}-volume-{{ $volume.name }}
          persistentVolumeClaim:
            claimName: {{ $.Values.appName }}-claim-{{ $volume.name }}
        {{- end }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "ScheduleAnyway"
          labelSelector:
            matchLabels:
              app: {{ .Values.appName }}-template
      containers:
        - name: {{ .Values.appName }}-container
          image: {{ .Values.imageLocation }}
          imagePullPolicy: {{ default "Always" .Values.imagePullPolicy }}        
          {{- if .Values.resources }}
          resources:
            {{- if .Values.resources.limits }}
            limits:
              {{- if .Values.resources.limits.cpu }}
              cpu: {{ .Values.resources.limits.cpu | quote }}
              {{- end }}
              {{- if .Values.resources.limits.memory }}
              memory: {{ .Values.resources.limits.memory | quote }}
              {{- end }}
            {{- end }}
            {{- if .Values.resources.requests }}
            requests:
              {{- if .Values.resources.requests.cpu }}
              cpu: {{ .Values.resources.requests.cpu | quote }}
              {{- end }}
              {{- if .Values.resources.requests.memory }}
              memory: {{ .Values.resources.requests.memory | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          args:          
            {{- range $arg := .Values.containerArgs }}
            - {{ $arg | quote }}
            {{- end }}
          ports:          
            {{- range $port := .Values.containerPorts }}
            - name: {{ $port.name }}
              containerPort: {{ $port.targetPort }}
              {{ if $port.protocol }}
              protocol: {{ $port.protocol }}
              {{ end }}
            {{- end }}   
          envFrom:
            {{- range $secret := .Values.secrets }}
            - secretRef:
                name: {{ $secret.name }}
            {{- end }}
          env:
            {{- range $key, $val := .Values.envVars }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          volumeMounts:
            {{- range $volume := .Values.persistentVolumeClaims }}
            - mountPath: {{ $volume.mountPath | quote }}
              name: {{ $.Values.appName }}-volume-{{ $volume.name }}
            {{- end }}   

{{- end }}